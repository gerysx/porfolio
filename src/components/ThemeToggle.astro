---
import SunIcon from "./icons/Sun.astro"
import MoonIcon from "./icons/Moon.astro"

// SÃ³lo "Light" y "Dark"
const THEMES = ["Light", "Dark"]
---

<div class="relative ml-1 mr-1">
  <button
    id="theme-toggle-btn"
    class="appearance-none border-none flex hover:scale-125 transition"
    aria-label="Alternar tema"
  >
    <SunIcon id="light" class="theme-toggle-icon size-5 transition-all" />
    <MoonIcon id="dark" class="theme-toggle-icon absolute size-5 transition-all" />
  </button>
</div>

<style>
  .theme-toggle-icon {
    /* Inicio: ocultas todas */
    scale: 0;
    transition: scale 0.2s ease-in-out;
  }
  .theme-toggle-icon.active {
    /* Icono activo */
    scale: 1;
  }
</style>

<script is:inline>
  const btn = document.getElementById("theme-toggle-btn")
  const icons = {
    light: document.getElementById("light"),
    dark: document.getElementById("dark"),
  }

  // Si no hay nada en localStorage, el modo por defecto es 'dark'
  function getThemePreference() {
    const stored = localStorage.getItem("theme")
    return (stored === "light" || stored === "dark") ? stored : "dark"
  }

  function applyTheme(pref) {
    // Aplica la clase 'dark' al <html> si es modo oscuro
    document.documentElement.classList[pref === "dark" ? "add" : "remove"]("dark")
    // Actualiza el icono activo
    Object.entries(icons).forEach(([key, el]) => {
      el.classList.toggle("active", key === pref)
    })
  }

  // Inicializa al cargar
  let current = getThemePreference()
  applyTheme(current)

  // Al pulsar, alterna entre light/dark y guarda en localStorage
  btn.addEventListener("click", () => {
    current = current === "dark" ? "light" : "dark"
    localStorage.setItem("theme", current)
    applyTheme(current)
  })
</script>
